

//apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'co.riiid.gradle'

// publish release artifacts to bintray repository
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'pl.allegro.tech.build.axion-release'

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
    filesMatching('*.properties') {
        filter( ReplaceTokens, tokens:['project.version': currentReleaseVersion])
    }
}

// ##################################################
// read the last git release tag
// Original code see: http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
//
def currentReleaseTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--match', 'v[0-9\\.]*'
        standardOutput = stdout
        ignoreExitValue = true
    }
    def releaseTag = stdout.toString().trim()
    return releaseTag ? releaseTag : "v0.0.0"
}

ext.currentReleaseVersion = currentReleaseTag().replace("v", "")

// ##################################################
// Plugin configuration to create release tag and push it to github
//
scmVersion {
    tag {
        prefix = 'v'
    }
}

// ##################################################
// Plugin configuration to publish release artifacts to bintray
//
publish {
    groupId = 'de.nenick'
    publishVersion = currentReleaseTag().replace("v", "")
    desc = 'Oh hi, this is a nice description for a project, right?'
    website = 'https://github.com/nenick/androidannotations-mvp'
    licences = ['AML'] // AML = MIT license http://spdx.org/licenses/
    autoPublish = true
}

// ##################################################
// Plugin configuration to publish release artifacts to github
//
github {
    //noinspection GroovyAssignabilityCheck
    owner = project.hasProperty("githubUser") ? project.property("githubUser") : "undefined"
    repo = 'androidannotation-mvp'
    token = project.hasProperty("githubKey") ? project.property("githubKey") : "undefined"
    tagName = currentReleaseTag()
    targetCommitish = 'master'
    name = currentReleaseTag()
    body = new File(projectDir, '../RELEASE_PLAN.md').text
    assets = ['androidannotation-mvp/build/libs/mvp-plugin-' + currentReleaseVersion + '.jar',
              'androidannotation-mvp-api/build/libs/mvp-plugin-api-' + currentReleaseVersion + '.jar']
}